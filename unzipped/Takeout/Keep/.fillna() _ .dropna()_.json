{"color":"DEFAULT","isTrashed":false,"isPinned":false,"isArchived":false,"textContent":"df['Car'].fillna(df['Car'].mean(),inplace=True) => fill Nan or Na \n\ndf.dropna(axis=0, how='any', thresh=None, subset=None, inplace=True) => supprime toutes les lignes qui contienent des NaN or Na\n\n\n\n","title":".fillna() / .dropna() ","userEditedTimestampUsec":1676713847613000,"createdTimestampUsec":1675965870227000,"textContentHtml":"<p dir=\"ltr\" style=\"line-height:1.38;margin-top:0.0pt;margin-bottom:0.0pt;\"><span style=\"font-size:16.0pt;font-family:'Google Sans';color:#000000;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">df['Car'].fillna(df['Car'].mean(),inplace=True) =&gt; fill Nan or Na&nbsp;<\/span><\/p><br /><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0.0pt;margin-bottom:0.0pt;\"><span style=\"font-size:16.0pt;font-family:'Google Sans';color:#000000;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">df.dropna(axis=0, how='any', thresh=None, subset=None, inplace=True) =&gt; supprime toutes les lignes qui contienent des NaN or Na<\/span><\/p><br /><br /><br />","labels":[{"name":"Machine Learning"}]}