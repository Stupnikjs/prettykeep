{"color":"DEFAULT","isTrashed":false,"isPinned":false,"isArchived":false,"textContent":"To optimize k, you may wish to analyze a scree plot for guidance. A scree plot visualizes the degree of scattering (variance) by comparing the distortion for each variation of clusters. Distortion is measured as the average of the squared distance between the centroid and the other data points in that cluster, usually using Euclidean distance.\n\nTo determine the optimal number of clusters, you are looking to select the value of k where distortion subsides dramatically to the left of the scree plot but before it reaches a point of negligible change with cluster variations to the right. This means that distortion should start decreasing linearly to the right from the optimal data point (the \u201celbow\u201d point).\n\nIn the case of our model, the optimal number appears to be 3 or 4 clusters. There exists a significant kink to the left of these two cluster combinations due to a pronounced drop-off in distortion.\n\nThere is also a linear decline to the right, especially for k=4. This makes sense given that the dataset was artificially generated with centers set to 4.\n\nUsing Python, you can code the scree plot above by iterating the values of k from 1 to 10 and calculating the values of distortion for each k value. This involves using the for loop function in Python and Matplotlib to plot the scree plot, as shown below.\n\nUsing a for loop, iterate the values of k with a range of 1-10 and find the values of distortion for each k value.","title":"Scree Plot ","userEditedTimestampUsec":1675939926312000,"createdTimestampUsec":1675939919193000,"textContentHtml":"<p dir=\"ltr\" style=\"line-height:1.38;margin-top:0.0pt;margin-bottom:0.0pt;\"><span style=\"font-size:16.0pt;font-family:'Google Sans';color:#000000;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">To optimize k, you may wish to analyze a scree plot for guidance. A scree plot visualizes the degree of scattering (variance) by comparing the distortion for each variation of clusters. Distortion is measured as the average of the squared distance between the centroid and the other data points in that cluster, usually using Euclidean distance.<\/span><\/p><br /><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0.0pt;margin-bottom:0.0pt;\"><span style=\"font-size:16.0pt;font-family:'Google Sans';color:#000000;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">To determine the optimal number of clusters, you are looking to select the value of k where distortion subsides dramatically to the left of the scree plot but before it reaches a point of negligible change with cluster variations to the right. This means that distortion should start decreasing linearly to the right from the optimal data point (the &ldquo;elbow&rdquo; point).<\/span><\/p><br /><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0.0pt;margin-bottom:0.0pt;\"><span style=\"font-size:16.0pt;font-family:'Google Sans';color:#000000;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">In the case of our model, the optimal number appears to be 3 or 4 clusters. There exists a significant kink to the left of these two cluster combinations due to a pronounced drop-off in distortion.<\/span><\/p><br /><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0.0pt;margin-bottom:0.0pt;\"><span style=\"font-size:16.0pt;font-family:'Google Sans';color:#000000;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">There is also a linear decline to the right, especially for k=4. This makes sense given that the dataset was artificially generated with centers set to 4.<\/span><\/p><br /><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0.0pt;margin-bottom:0.0pt;\"><span style=\"font-size:16.0pt;font-family:'Google Sans';color:#000000;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">Using Python, you can code the scree plot above by iterating the values of k from 1 to 10 and calculating the values of distortion for each k value. This involves using the for loop function in Python and Matplotlib to plot the scree plot, as shown below.<\/span><\/p><br /><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0.0pt;margin-bottom:0.0pt;\"><span style=\"font-size:16.0pt;font-family:'Google Sans';color:#000000;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">Using a for loop, iterate the values of k with a range of 1-10 and find the values of distortion for each k value.<\/span><\/p>","labels":[{"name":"Machine Learning"}]}